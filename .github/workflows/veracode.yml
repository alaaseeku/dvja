# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "Veracode Pipeline"

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  #schedule:
  #  - cron: '27 11 * * 5'

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Build with Maven
      run: mvn clean install
 #   - name: Upload Build Artifact
 #     uses: actions/upload-artifact@v3
 #     with:
 #         name: build-output
 #         path: target/
#  Test:
#    name: Test
#    runs-on: ubuntu-latest
#    environment: ${{ github.ref_name }}
#    needs: Build
#    steps:
#    - name: Download Build Artifact
#      uses: actions/download-artifact@v3
#      with:
#          name: build-output
    - name: Veracode Pipeline
      id: pipeline-scan
      uses: veracode/Veracode-pipeline-scan-action@v1.0.12
      continue-on-error: true
      with:
          vid: ${{ secrets.API_ID }}
          vkey: ${{ secrets.API_KEY }}
          file: "target/dvja-1.0-SNAPSHOT.war" 
          store_baseline_file: FALES
  #  - name: Veracode Pipeline
  #    continue-on-error: true
  #    run: |
  #      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
  #      unzip -o pipeline-scan-LATEST.zip
  #      java -jar pipeline-scan.jar -vid '${{ secrets.API_ID }}' -vkey '${{ secrets.API_KEY }}' --file "target/dvja-1.0-SNAPSHOT.war" --fail_on_severity "Very High, High"
  #      rm -rf pipeline-scan-LATEST.zip pipeline-scan.jar
    - name: Veracode Upload And Scan
      uses: veracode/veracode-uploadandscan-action@0.2.6
      continue-on-error: true
      with:
          appname: 'Demo'
          createprofile: false
          filepath: 'target/dvja-1.0-SNAPSHOT.war'
          vid: '${{ secrets.API_ID }}'
          vkey: '${{ secrets.API_KEY }}'
 
    - name: Veracode SCA
      continue-on-error: true
      env:
       SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
      run: |
        curl -sSL  https://download.sourceclear.com/ci.sh | bash -s scan --allow-dirty
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      continue-on-error: true
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      continue-on-error: true
      with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/veravodedemo:${{ github.run_id }}
    - name: Veracode Docker SCA
      continue-on-error: true
      env:
       SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
      run: |
        curl -sSL  https://download.sourceclear.com/ci.sh | bash -s scan --image ahahmed/veravodedemo:${{ github.run_id }}
    # Initializes the CodeQL tools for scanning.
   
